var o,p,n=nil;
o=[Store.prNew,Array.prNew(32),Event.prNew,Array.prNew(16),Event.prNew,Array.prNew(8),{ arg ev, zoom;
			SequenceableBlock(ev, zoom);
		},Event.prNew,Array.prNew(8),Event.prNew,Array.prNew(24),{ arg ev;
			var timestamp = if (ev.unit == 'beats') {
				ev[ev.unit]; // events will be played on a tempo clock so beats is the more universal measure
			} {
				ev[ev.unit] * ev.timingContext.bpm / 60; // a time in seconds is converted to a beat value
			};
			timestamp;
		},Event.prNew,Array.prNew(12),{
			var ev = currentEnvironment;
			var mod = ev.getModule;
			mod.play(ev);
		},{ arg ev;
			Mod.all[ev.src.asSymbol];
		},Event.prNew,Array.prNew(32),"/Users/adamjuraszek/PROJECTS/supercollider/packages/examples/sequencer/data/oxygen.wav",Event.prNew,Array.prNew(24),{ arg ev;
			ev.postln;
			// var soundfileMod = Mod.at(ev.soundfile);
			(
				instrument: 'stereo_player',
				atk: 1,
				decay: 0.1,
				sustain: 1,
				startPos: 0.4,
				// buffer: soundfileMod.buffer
			).play;
		},{ arg ev, zoom;
			SequenceableSoundfileBlock(ev, zoom);
		},{ arg ev;
			// open a soundfile editor from here
		},Event.prNew,Array.prNew(8),{ arg ev, zoom;
			SequenceableBlock(ev, zoom);
		},Event.prNew,Array.prNew(8),Event.prNew,Array.prNew(24),{ arg ev;
			var timestamp = if (ev.unit == 'beats') {
				ev[ev.unit]; // events will be played on a tempo clock so beats is the more universal measure
			} {
				ev[ev.unit] * ev.timingContext.bpm / 60; // a time in seconds is converted to a beat value
			};
			timestamp;
		},Event.prNew,Array.prNew(12),{
			var ev = currentEnvironment;
			var mod = ev.getModule;
			mod.play(ev);
		},{ arg ev;
			Mod.all[ev.src.asSymbol];
		},Event.prNew,Array.prNew(4),Store.prNew,Array.prNew(32),"/Users/adamjuraszek/PROJECTS/supercollider/packages/examples/sequencer/src/store_code.scd",Event.prNew,Array.prNew(32),{ arg ev, zoom;
	SequenceableSoundfileBlock(ev, zoom);
},Event.prNew,Array.prNew(40),{
			var soundfileMod = currentEnvironment.getSoundfileMod;
			(
				instrument: ~instrument,
				atk: ~atk,
				decay: ~decay,
				sustain: ~length,
				startPos: ~startPos,
				buffer: soundfileMod.buffer
			).play;
		},{ arg ev;
			Mod.all.at(ev.soundfile);
		},{ arg ev;
			// open a soundfile editor from here
		},{ arg ev, zoom;
			SequenceableSoundfileBlock(ev, zoom);
		},Event.prNew,Array.prNew(8),{ arg ev, zoom;
			SequenceableBlock(ev, zoom);
		},Event.prNew,Array.prNew(8),Event.prNew,Array.prNew(24),{ arg ev;
			var timestamp = if (ev.unit == 'beats') {
				ev[ev.unit]; // events will be played on a tempo clock so beats is the more universal measure
			} {
				ev[ev.unit] * ev.timingContext.bpm / 60; // a time in seconds is converted to a beat value
			};
			timestamp;
		},Event.prNew,Array.prNew(12),{
			var ev = currentEnvironment;
			var mod = ev.getModule;
			mod.play(ev);
		},{ arg ev;
			Mod.all[ev.src.asSymbol];
		},SortedList.prNew,Array.prNew(1),{ arg a, b;
			a.timestamp < b.timestamp;
		},Event.prNew,Array.prNew(4),Array.prNew(2),Event.prNew,Array.prNew(16),Event.prNew,Array.prNew(16),SortedList.prNew,Array.prNew(5),{ arg a, b;
			a.timestamp < b.timestamp;
		}];
p=[0,[array:o[1],size:7,proto:nil,parent:nil,know:true,id:nil,orderedItems:o[72],player:nil],1,[1005,o[2],n,n,1002,o[16],'timingContext',o[36],1006,o[38],n,n,n,n,'transportContext',o[65],1003,o[68],1004,o[70],n,n,n,n,n,n,n,n,n,n,n,n],2,[array:o[3],size:3,proto:o[0],parent:o[4],know:true],3,[n,n,'beats',0,n,n,'row',2,n,n,'id',1005,n,n,n,n],4,[array:o[5],size:2,proto:nil,parent:o[7],know:true],5,[n,n,'type','sequencerEvent',n,n,'getEmbedView',o[6]],7,[array:o[8],size:2,proto:nil,parent:o[9],know:true],8,[n,n,'type','rowEvent',n,n,'row',0],9,[array:o[10],size:6,proto:nil,parent:o[12],know:true],10,[n,n,'beats',0,'length',1,n,n,n,n,'type','timingEvent','timestamp',o[11],'absolute',0,'unit','beats',n,n,n,n,n,n],12,[array:o[13],size:3,proto:nil,parent:nil,know:true],13,[n,n,'play',o[14],n,n,'getModule',o[15],n,n,'type','codeEvent'],16,[array:o[17],size:6,proto:o[0],parent:o[19],know:true],17,['startPos',0,'beats',5.0,'length',2,'soundfile',o[18],n,n,n,n,n,n,n,n,n,n,n,n,n,n,'row',3.0,n,n,'id',1002,n,n,n,n],19,[array:o[20],size:5,proto:nil,parent:o[24],know:true],20,[n,n,'play',o[21],n,n,n,n,'startPos',0,'type','sampleEvent',n,n,'getEmbedView',o[22],n,n,n,n,'getView',o[23],n,n],24,[array:o[25],size:2,proto:nil,parent:o[27],know:true],25,[n,n,'type','sequencerEvent',n,n,'getEmbedView',o[26]],27,[array:o[28],size:2,proto:nil,parent:o[29],know:true],28,[n,n,'type','rowEvent',n,n,'row',0],29,[array:o[30],size:6,proto:nil,parent:o[32],know:true],30,[n,n,'beats',0,'length',1,n,n,n,n,'type','timingEvent','timestamp',o[31],'absolute',0,'unit','beats',n,n,n,n,n,n],32,[array:o[33],size:3,proto:nil,parent:nil,know:true],33,[n,n,'play',o[34],n,n,'getModule',o[35],n,n,'type','codeEvent'],36,[array:o[37],size:1,proto:nil,parent:nil,know:true],37,['bpm',60,n,n],38,[array:o[39],size:6,proto:o[0],parent:o[4],know:true,id:1006,orderedItems:o[62],player:nil],39,[n,n,'beats',3.25,'length',1,'src',o[40],1007,o[41],'storeId',1006,n,n,n,n,n,n,n,n,n,n,'row',5,n,n,n,n,n,n,n,n],41,[array:o[42],size:6,proto:o[38],parent:o[44],know:true],42,['startPos',0,'beats',0,'length',2,'soundfile',o[18],'getEmbedView',o[43],n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,'id',1007,n,n,n,n],44,[array:o[45],size:9,proto:nil,parent:o[50],know:true],45,[n,n,'play',o[46],n,n,n,n,'startPos',0,'decay',0.05,n,n,n,n,'getSoundfileMod',o[47],'type','sampleEvent',n,n,n,n,'atk',0.05,'instrument','stereo_player','getView',o[48],n,n,n,n,n,n,n,n,'getEmbedView',o[49]],50,[array:o[51],size:2,proto:nil,parent:o[53],know:true],51,[n,n,'type','sequencerEvent',n,n,'getEmbedView',o[52]],53,[array:o[54],size:2,proto:nil,parent:o[55],know:true],54,[n,n,'type','rowEvent',n,n,'row',0],55,[array:o[56],size:6,proto:nil,parent:o[58],know:true],56,[n,n,'beats',0,'length',1,n,n,n,n,'type','timingEvent','timestamp',o[57],'absolute',0,'unit','beats',n,n,n,n,n,n],58,[array:o[59],size:3,proto:nil,parent:nil,know:true],59,[n,n,'play',o[60],n,n,'getModule',o[61],n,n,'type','codeEvent'],62,[array:o[63],function:o[64]],63,[o[41]],65,[array:o[66],size:1,proto:nil,parent:nil,know:true],66,[n,n,'loopPoints',o[67]],67,[4,8],68,[array:o[69],size:5,proto:o[0],parent:o[19],know:true],69,['startPos',0,'beats',4,'length',2,'soundfile',o[18],n,n,'id',1003,n,n,n,n],70,[array:o[71],size:5,proto:o[0],parent:o[19],know:true],71,['startPos',0.2,'beats',6.5,'length',2,'soundfile',o[18],n,n,'id',1004,n,n,n,n],72,[array:o[73],function:o[74]],73,[o[2],o[38],o[68],o[16],o[70]]
];
prUnarchive(o,p);
